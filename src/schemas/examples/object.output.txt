{
  "refs": Map {
    "(object.ts).ObjectType" => {
      "description": "Object Type",
      "properties": {
        "b": {
          "description": "boolean",
          "type": "boolean",
        },
        "n": {
          "description": "number",
          "type": "number",
        },
        "o": {
          "description": "optional string",
          "type": "string",
        },
        "s": {
          "description": "string",
          "type": "string",
        },
      },
      "required": [
        "s",
        "n",
        "b",
      ],
      "type": "object",
    },
    "(object.ts).LiteralObjectType" => {
      "description": "Literal Object Type",
      "properties": {
        "b": {
          "description": "boolean",
          "type": "boolean",
        },
        "n": {
          "description": "number",
          "type": "number",
        },
        "o": {
          "description": "optional string",
          "type": "string",
        },
        "s": {
          "description": "string",
          "type": "string",
        },
      },
      "required": [
        "s",
        "n",
        "b",
      ],
      "type": "object",
    },
    "(object.ts).LiteralValueObject" => {
      "properties": {
        "False": {
          "enum": [
            false,
          ],
          "type": "boolean",
        },
        "Num": {
          "enum": [
            1111,
          ],
          "type": "number",
        },
        "Str": {
          "enum": [
            "string",
          ],
          "type": "string",
        },
        "TemplateStr": {
          "enum": [
            "ssss",
          ],
          "type": "string",
        },
        "True": {
          "enum": [
            true,
          ],
          "type": "boolean",
        },
        "obj": {
          "properties": {
            "a": {
              "type": "number",
            },
          },
          "required": [
            "a",
          ],
          "type": "object",
        },
      },
      "required": [
        "Str",
        "Num",
        "TemplateStr",
        "False",
        "obj",
      ],
      "type": "object",
    },
  },
  "schemas": [
    {
      "$ref": "(object.ts).ObjectType",
    },
    {
      "$ref": "(object.ts).LiteralObjectType",
    },
    {
      "$ref": "(object.ts).LiteralValueObject",
    },
  ],
}